name: Auto Merge Pull Requests
on:
  pull_request_target:
    types: [opened, reopened, synchronize]
jobs:
  auto-merge:
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Checkout base branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.base_ref }}
          path: base
      - name: Check file hashes
        run: |
          # Define files to check
          FILES_TO_CHECK="index.html CNAME robots.txt README.md .github/workflows/BOT.yml"
          # Initialize flag
          CHANGED="no"
          # Loop through files and compare hashes
          for FILE in $FILES_TO_CHECK; do
            # Compute hashes
            PR_HASH=$(sha256sum "$FILE" | cut -d ' ' -f 1)
            BASE_HASH=$(sha256sum "base/$FILE" | cut -d ' ' -f 1)
            # Compare hashes
            if [ "$PR_HASH" != "$BASE_HASH" ]; then
              echo "File $FILE has been modified."
              CHANGED="yes"
            fi
          done
          # Fail job if any file has been modified
          if [ "$CHANGED" = "yes" ]; then
            echo "Some files were modified. Exiting with error."
            exit 1
          fi
      - name: Check for added or deleted files in workflow directory
        run: |
          # Define the directory to check
          DIR_TO_CHECK=".github/workflows"

          # Listing files and output their names
          echo "Listing files in PR branch..."
          PR_FILES=($(find "$DIR_TO_CHECK" -type f | sort))
          echo "PR branch files:"
          printf "%s\n" "${PR_FILES[@]}"
          
          echo "Listing files in base branch..."
          BASE_FILES=($(cd base && find "$DIR_TO_CHECK" -type f | sort))
          echo "Base branch files:"
          printf "%s\n" "${BASE_FILES[@]}"

          # Function to compare arrays
          compare_file_lists() {
            local -n _pr_files=$1
            local -n _base_files=$2
            local changes_found=0

            # Create associative arrays
            declare -A file_map
            for file in "${_pr_files[@]}"; do
                file_map["$file"]=1
            done
            for file in "${_base_files[@]}"; do
                if [[ -z "${file_map["$file"]}" ]]; then
                    echo "File added: $file"
                    changes_found=1
                else
                    unset file_map["$file"]
                fi
            done
            for file in "${!file_map[@]}"; do
                echo "File deleted: $file"
                changes_found=1
            done

            return $changes_found
          }

          # Compare file lists
          echo "Comparing file lists..."
          if compare_file_lists PR_FILES BASE_FILES; then
            echo "No new files added or deleted in $DIR_TO_CHECK."
          else
            echo "File additions or deletions detected in $DIR_TO_CHECK."
            exit 1
          fi

      - name: Auto approve
        uses: hmarr/auto-approve-action@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Automerge
        uses: pascalgn/automerge-action@v0.16.3
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
