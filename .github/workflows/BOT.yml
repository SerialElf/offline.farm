name: Auto Merge Pull Requests
on:
  pull_request_target:
    types: [opened, reopened, synchronize]
jobs:
  auto-merge:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Checkout base branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.base_ref }}
          path: base
      - name: Check file hashes
        run: |
          # Define files to check
          FILES_TO_CHECK="index.html CNAME robots.txt README.md"
          # Initialize flag
          CHANGED="no"
          # Loop through files and compare hashes
          for FILE in $FILES_TO_CHECK; do
            # Compute hashes
            PR_HASH=$(sha256sum "$FILE" | cut -d ' ' -f 1)
            BASE_HASH=$(sha256sum "base/$FILE" | cut -d ' ' -f 1)
            # Compare hashes
            if [ "$PR_HASH" != "$BASE_HASH" ]; then
              echo "File $FILE has been modified."
              CHANGED="yes"
            fi
          done
          # Fail job if any file has been modified
          if [ "$CHANGED" = "yes" ]; then
            echo "Some files were modified. Exiting with error."
            exit 1
          fi
      - name: Check workflow directory integrity
        run: |
          # Define the directory to check
          DIR_TO_CHECK=".github/workflows"
          
          # Go to the GitHub workspace
          cd $GITHUB_WORKSPACE

          # Compute hashes for all files in the directory on PR branch, sort by file path
          echo "Computing PR hashes..."
          PR_HASHES=$(find "$DIR_TO_CHECK" -type f -exec sha256sum {} + | sort -k 2)
          echo "PR hashes computed."

          # Change to the base directory and compute hashes there
          echo "Changing to base directory..."
          cd base
          echo "Computing base hashes..."
          BASE_HASHES=$(find "$DIR_TO_CHECK" -type f -exec sha256sum {} + | sort -k 2)
          echo "Base hashes computed."

          # Return to initial directory
          cd ..

          # Output hashes for diagnostics
          echo "PR hashes:"
          echo "$PR_HASHES"
          echo "Base hashes:"
          echo "$BASE_HASHES"

          # Save output of diff to a variable to simplify error handling
          echo "Comparing hashes..."
          DIFF_OUTPUT=$(diff <(echo "$PR_HASHES") <(echo "$BASE_HASHES"))
          DIFF_EXIT_CODE=$?

          if [ "$DIFF_EXIT_CODE" -ne 0 ]; then
            echo "Changes detected in $DIR_TO_CHECK."
            echo "Differences detected:"
            echo "$DIFF_OUTPUT"
            exit 1
          else
            echo "No changes detected in $DIR_TO_CHECK."
      - name: Auto approve
        uses: hmarr/auto-approve-action@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
